{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saif loay\\\\Desktop\\\\Learn\\\\React Course\\\\23 Nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupid]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction detailsMeetupPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      description: props.meetupData.description,\n      address: props.meetupData.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://saifloayhazem:45ZpDb6UcfdEdD2V@saifluay.82rs50x.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetupId => ({\n      params: {\n        meetupid: meetupId._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data here\n  const meetupId = context.params.meetupid;\n  const client = await MongoClient.connect(\"mongodb+srv://saifloayhazem:45ZpDb6UcfdEdD2V@saifluay.82rs50x.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetup = await meetupCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        image: meetup.image,\n        id: meetup._id.toString(),\n        title: meetup.title,\n        description: meetup.description,\n        address: meetup.address\n      }\n    }\n  };\n}\nexport default detailsMeetupPage;","map":{"version":3,"sources":["C:/Users/saif loay/Desktop/Learn/React Course/23 Nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupid]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetails","detailsMeetupPage","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetupId","params","meetupid","toString","getStaticProps","context","meetup","findOne","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD5B;AAEI,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,WAHlC;AAII,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,+GADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,QAAD,KAAe;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,QAAQ,CAACL,GAAT,CAAaQ,QAAb;AAAZ;AADsB,KAAf,CAAZ;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAML,QAAQ,GAAGK,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACjB,+GADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMc,MAAM,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AAC1CZ,IAAAA,GAAG,EAAE,IAAIjB,QAAJ,CAAasB,QAAb;AADqC,GAAzB,CAArB;AAIA,SAAO;AACHnB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRG,QAAAA,KAAK,EAAEqB,MAAM,CAACrB,KADN;AAERuB,QAAAA,EAAE,EAAEF,MAAM,CAACX,GAAP,CAAWQ,QAAX,EAFI;AAGRpB,QAAAA,KAAK,EAAEuB,MAAM,CAACvB,KAHN;AAIRC,QAAAA,WAAW,EAAEsB,MAAM,CAACtB,WAJZ;AAKRE,QAAAA,OAAO,EAAEoB,MAAM,CAACpB;AALR;AADT;AADJ,GAAP;AAWH;AAED,eAAeN,iBAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\n\r\nfunction detailsMeetupPage(props) {\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name=\"description\" content={props.meetupData.description} />\r\n            </Head>\r\n            <MeetupDetails\r\n                image={props.meetupData.image}\r\n                title={props.meetupData.title}\r\n                description={props.meetupData.description}\r\n                address={props.meetupData.address}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://saifloayhazem:45ZpDb6UcfdEdD2V@saifluay.82rs50x.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map((meetupId) => ({\r\n            params: { meetupid: meetupId._id.toString() },\r\n        })),\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    // fetch data here\r\n    const meetupId = context.params.meetupid;\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://saifloayhazem:45ZpDb6UcfdEdD2V@saifluay.82rs50x.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n    const meetupCollection = db.collection(\"meetups\");\r\n\r\n    const meetup = await meetupCollection.findOne({\r\n        _id: new ObjectId(meetupId),\r\n    });\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: meetup.image,\r\n                id: meetup._id.toString(),\r\n                title: meetup.title,\r\n                description: meetup.description,\r\n                address: meetup.address,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nexport default detailsMeetupPage;\r\n"]},"metadata":{},"sourceType":"module"}